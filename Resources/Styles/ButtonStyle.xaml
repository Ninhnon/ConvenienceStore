<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
    <Style x:Key="topBtnStyle"
  
           TargetType="RadioButton">

        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Foreground" Value="#9EABE2" />
        <Setter Property="Width" Value="80" />
        <Setter Property="Height" Value="30" />
        <Setter Property="Margin" Value="5 0 0 0" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="RadioButton">

                    <Border Background="{TemplateBinding Background}" CornerRadius="15">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                    </Border>

                    <ControlTemplate.Triggers>

                        <Trigger Property="IsMouseOver"
                                 Value="True">
                            <!--Khi chuột lướt ngang-->
                            <Setter Property="Background" Value="#9e10C4" />
                            <Setter Property="Foreground" Value="#ffffff" />
                        </Trigger>



                        <!--Khi nhấn vào-->
                        <Trigger Property="IsChecked"
                                 Value="True">
                            <!--Set màu background của border và thanh dọc indicator-->
                            <Setter Property="Background" Value="#5B60C4" />
                            <Setter Property="Foreground" Value="#ffffff" />
                        </Trigger>

                    </ControlTemplate.Triggers>

                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <!--Chinh margin khi luot chuot ngang qua-->
       
    </Style>
    <!--RADIO BUTTON STYLE-->
    <Style x:Key="BtnStyle"
  
           TargetType="RadioButton">

        <Setter Property="HorizontalAlignment"
                Value="Center" />
        <Setter Property="VerticalAlignment"
                Value="Center" />
        <Setter Property="Margin"
                Value="0,0,0,0" />

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="RadioButton">

                    <Border x:Name="border"
                            Height="50"
                            Width="228"
                            BorderThickness="0">

                        <Border.Background>
                            <SolidColorBrush x:Name="BorderBackground"
                                             Color="#272B2F" />
                            <!--Màu gốc của thanh menu-->
                        </Border.Background>

                        <Grid>
                            <!--Day la cai thanh doc khi ma minh chon => indicator-->
                            <Border x:Name="Indicator"
                                    Height="35"
                                    Width="4"
                                    HorizontalAlignment="Left"
                                    VerticalAlignment="Center"
                                    Background="#78A3FC"           
                            Visibility="Collapsed"
                                    CornerRadius="2" />

                            <ContentPresenter/>
                            <!--control presenter để hiện các content, nếu không có nó thì nó chỉ hiện mỗi thanh dọc-->

                        </Grid>

                    </Border>

                    <ControlTemplate.Triggers>

                        <Trigger Property="IsMouseOver"
                                 Value="True">
                            <!--Khi chuột lướt ngang-->
                            <Setter Property="Visibility"
                                    TargetName="Indicator"     
                                    Value="Visible" />

                        </Trigger>
                        <!-- <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="true">
                <Setter Property="Height" Value="50"></Setter>
                <Setter Property="Margin" Value="0,0,0,5"></Setter>
                <Setter Property="Background" Value="{StaticResource ResourceKey=panelOverColor}"></Setter>
                <Setter Property="Foreground" Value="{StaticResource titleColor3}"></Setter>
                <Setter Property="BorderBrush" Value="{Binding Path=Tag, RelativeSource={RelativeSource Self}}"></Setter>



            </Trigger>-->
                        <EventTrigger RoutedEvent="Border.MouseEnter"
                                      SourceName="border">
                            <!--Mouse enter là giống như mouse over nhưng có source là cái border, màu dần chuyển màu-->

                            <BeginStoryboard>
                                <Storyboard>
                                    <ColorAnimation Storyboard.TargetName="BorderBackground"
                                                    Storyboard.TargetProperty="Color"
                                                    From="#272B2F"
                                                    To="#281269"
                                                    Duration="0:0:0.3" />
                                </Storyboard>
                            </BeginStoryboard>

                        </EventTrigger>
                        <!--Mouse leave là rời khỏi thì nó dần chuyển màu về màu gốc-->
                        <EventTrigger RoutedEvent="Border.MouseLeave"
                                      SourceName="border">

                            <BeginStoryboard>
                                <Storyboard>
                                    <ColorAnimation Storyboard.TargetName="BorderBackground"
                                                    Storyboard.TargetProperty="Color"
                                             
                                                    From="#281269"
                                                    To="#272B2F"
                                                    Duration="0:0:0.3" />
                                </Storyboard>
                            </BeginStoryboard>

                        </EventTrigger>
                        <!--Khi nhấn vào-->
                        <Trigger Property="IsChecked"
                                 Value="True">
                            <!--Set màu background của border và thanh dọc indicator-->
                            <Setter Property="Background"
                                    TargetName="border"
                                    Value="#2B1372" />

                            <Setter Property="Visibility"
                                    TargetName="Indicator"
                                    Value="Visible" />

                        </Trigger>

                    </ControlTemplate.Triggers>

                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <!--Chinh margin khi luot chuot ngang qua-->
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="true">

                <Setter Property="Margin" Value="8,0,0,5"></Setter>
            </Trigger>
        </Style.Triggers>
    </Style>
    <!--END OF RADIOBUTTON STYLE-->



    <!--EXIT BUTTON-->
    <!--2 image of shutdown, dùng image brush vì cái này mới bỏ vô back ground dc-->


    <Style x:Key="saveEmployeeButton" TargetType="Button">
        <Setter Property="Background" Value="#4880FF" />
        <Setter Property="Foreground" Value="#ffffff" />
        <Setter Property="FontSize" Value="16" />
        <Setter Property="FontWeight" Value="Light" />
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="Width" Value="180" />
        <Setter Property="Height" Value="40" />
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border Background="{TemplateBinding Background}" CornerRadius="7">
                        <ContentPresenter VerticalAlignment="Center" HorizontalAlignment="Center" Margin="0 0 0 1"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="#3b6bd9" />
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="backEmployeeButton" TargetType="Button" BasedOn="{StaticResource saveEmployeeButton}">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Foreground" Value="#979797" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border Background="{TemplateBinding Background}" CornerRadius="7" BorderThickness="0.8" BorderBrush="#b9b9b9">
                        <ContentPresenter VerticalAlignment="Center" HorizontalAlignment="Center" Margin="0 0 0 1"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="#d0d0d0" />
                <Setter Property="Foreground" Value="#ffffff" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <!--Minimize button style-->
    <Style TargetType="Button" x:Key="btnMinimize">
        <Setter Property="Background" Value="#28AEED"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border Width="18" Height="18"
                                        CornerRadius="9"
                                        Background="{TemplateBinding Background}">
                        <ContentPresenter VerticalAlignment="Center"
                                                      HorizontalAlignment="Center"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>


        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="#278BEF"/>
            </Trigger>
        </Style.Triggers>


    </Style>


    <Style TargetType="Button" x:Key="btnClose">
        <Setter Property="Background" Value="#DA34AE"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border Width="18" Height="18"
                                        CornerRadius="9"
                                        Background="{TemplateBinding Background}">
                        <ContentPresenter VerticalAlignment="Center"
                                                      HorizontalAlignment="Center"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>


        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="#C62DAE"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="Button" x:Key="loginBtnStyle">
        <Setter Property="Background" Value="#462AD8"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border Width="150" Height="40"
                                        CornerRadius="20"
                                        Background="{TemplateBinding Background}">
                        <ContentPresenter VerticalAlignment="Center"
                                                      HorizontalAlignment="Center"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>

        </Setter>


        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="#28AEED"/>
            </Trigger>
        </Style.Triggers>

    </Style>

    <Style x:Key="saveButton" TargetType="Button">
        <Setter Property="Background" Value="#4880FF" />
        <Setter Property="Foreground" Value="#ffffff" />
        <Setter Property="FontSize" Value="16" />
        <Setter Property="FontWeight" Value="Light" />
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="Width" Value="180" />
        <Setter Property="Height" Value="40" />
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="Template">
            
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border Background="{TemplateBinding Background}" CornerRadius="7">
                        <ContentPresenter VerticalAlignment="Center" HorizontalAlignment="Center" Margin="0 0 0 1"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="#3b6bd9" />
            </Trigger>
        </Style.Triggers>
    </Style>





    <Style x:Key="backButton" TargetType="Button" BasedOn="{StaticResource saveButton}">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Foreground" Value="#979797" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border Background="{TemplateBinding Background}" CornerRadius="7" BorderThickness="0.8" BorderBrush="#b9b9b9">
                        <ContentPresenter VerticalAlignment="Center" HorizontalAlignment="Center" Margin="0 0 0 1"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="#d0d0d0" />
                <Setter Property="Foreground" Value="#ffffff" />
            </Trigger>
        </Style.Triggers>
    </Style>



</ResourceDictionary>